name: Vercel Production Deployment
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
on:
  push:
    branches:
      - main
jobs:
  Deploy-Production:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - run: npm ci
      - run: npm run lint:code
      - run: npm run lint:styles
      - run: npm run prettier
      - run: npm run check:types

  build:
    runs-on: ubuntu-latest
    env:
      NEXT_PUBLIC_API_BASE_URL: ${{vars.NEXT_PUBLIC_API_BASE_URL}}

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - run: npm ci
      - run: npm run build

  e2e:
    runs-on: ubuntu-latest
    env:
      NEXT_PUBLIC_API_BASE_URL: ${{vars.NEXT_PUBLIC_API_BASE_URL}}

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - run: npm ci
      - name: Build app
        run: npm run build
      - name: Cypress run
        uses: cypress-io/github-action@v4
        with:
          start: npm start

# name: Vercel Preview Deployment

# env:
#   VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
#   VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
# on:
#   push:
#     branches:
#       - main

# jobs:
#   install:
#     runs-on: ubuntu-latest
#     enviroment: Vercel-deploy
#     steps:
#       - uses: actions/checkout@v3
#       - uses: actions/setup-node@v3
#         with:
#           node-version: "18"
#           cache: "npm"
#       - run: npm ci
#       - name: Install Vercel CLI
#         run: npm install --global vercel@latest
#       - name: Pull Vercel Environment Information
#         run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
#       - name: Build Project Artifacts
#         run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
#       - name: Deploy Project Artifacts to Vercel
#         run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
